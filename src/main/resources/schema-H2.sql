-- public.game_sales definition

-- Drop table

DROP TABLE IF EXISTS game_sales;

CREATE TABLE game_sales (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	game_no int4 NULL,
	game_name varchar(20) NULL,
	game_code varchar(5) NULL,
	game_type int4 NULL,
	cost_price float8 NULL,
	tax float8 NULL,
	sale_price float8 NULL,
	date_of_sale timestamp(6) NULL,
	ingestion_id int8 NOT NULL,
	created timestamp(6) DEFAULT CURRENT_TIMESTAMP,
	last_modified timestamp(6) DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT game_sales_cost_price_check CHECK ((cost_price <= (100)::double precision)),
	CONSTRAINT game_sales_game_no_check CHECK (((game_no <= 100) AND (game_no >= 1))),
	CONSTRAINT game_sales_pkey PRIMARY KEY (id),
	CONSTRAINT game_sales_type_check CHECK (((game_type <= 2) AND (game_type >= 1)))
);

--CREATE FUNCTION metadataUpdate() RETURNS trigger AS '
--    BEGIN
--        IF NEW.created IS NULL THEN
--          NEW.created := CURRENT_TIMESTAMP;
--        END IF;
--        -- Update the last modified.
--        NEW.last_modified := current_timestamp;
--        RETURN NEW;
--    END;
--' LANGUAGE plpgsql;
--
--CREATE TRIGGER metadataUpdate BEFORE INSERT OR UPDATE ON game_sales
--    FOR EACH ROW EXECUTE PROCEDURE metadataUpdate();

-- This is for logging purpose.
DROP TABLE IF EXISTS ingestion_history;
--
CREATE TABLE ingestion_history (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	file_name varchar NULL,
	created timestamp(6) NULL DEFAULT CURRENT_TIMESTAMP,
	last_modified timestamp(6) NULL DEFAULT CURRENT_TIMESTAMP,
	status varchar NULL,
	CONSTRAINT ingestion_history_pkey PRIMARY KEY (id)
);

ALTER TABLE game_sales ADD CONSTRAINT game_sales_ingestion_history_fk FOREIGN KEY (ingestion_id) REFERENCES public.ingestion_history(id);

